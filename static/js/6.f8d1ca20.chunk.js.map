{"version":3,"sources":["Controls/Validators/Validators.js","common/FormControls/FormControls.js","common/FormControls/FormControls.module.sass","components/Dialogs/Dialogs.module.sass","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","Element","input","meta","touched","error","props","hasError","className","styles","formControl","Textarea","Input","createField","placeholder","type","name","component","validator","text","validate","module","exports","DialogItem","path","id","s","dialog","to","Message","message","maxLength30","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogElements","dialogs","map","d","messageElements","messages","m","dialogsItems","AddMessageForm","values","onMessageClick","newMessageText","mapStateToProps","state","isAuth","auth","compose","Component","RedirectComponent","this","React","connect","messagesPage","dispatch","newMessage","AddMessageActionCreator"],"mappings":"kGAAA,wFAEaA,EAAW,SAAAC,GACpB,IAAIA,EAEJ,OAAO,8BAAO,cAILC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GACzC,GAAIA,EAAMG,OAASD,EAAW,OAAO,sDAAwBA,EAAxB,gB,+LCNnCE,EAAU,SAAAA,GAAO,OAAI,YAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,gCAChEC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,kBAAC,EAAD,iBAAaH,EAAWI,IACvBC,GAAY,kCAAQF,EAAR,QAKZM,EAAWV,EAAQ,YACnBW,EAAQX,EAAQ,SAGhBY,EAAc,SAACC,EAAaC,EAAMC,EAAMC,EAAWC,GAArC,IAAgDZ,EAAhD,uDAAwD,GAAIa,EAA5D,uDAAmE,GAAnE,OACvB,6BACI,+BACI,kBAAC,IAAD,eAAOL,YAAaA,EAAaC,KAAMA,EAAMC,KAAMA,EAAMC,UAAWA,EAC7DG,SAAUF,GACTZ,KACHa,K,oBCvBjBE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,oBCA1ED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,wB,8FCYnMC,EATI,SAACjB,GAChB,IAAIkB,EAAO,YAAclB,EAAMmB,GAC/B,OACI,yBAAKjB,UAAWkB,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAIJ,GAAOlB,EAAMU,QCDvBa,EAJC,SAACvB,GACb,OAAO,yBAAKE,UAAWkB,IAAEI,SAAUxB,EAAMwB,U,oCCEvCC,EAAcjC,YAAiB,IAEtBkC,cAAU,CAACC,KAAM,wBAAjBD,EAA0C,SAAA1B,GACrD,OACI,0BAAME,UAAWkB,IAAEO,KAAMC,SAAU5B,EAAM6B,cACrC,6BACI,+BACI,kBAACC,EAAA,EAAD,CAAOnB,UAAWN,IAAUK,KAAM,iBAAkBF,YAAa,kBAC1DM,SAAU,CAACxB,IAAUmC,OAGpC,6BACI,oDCWDM,EAvBC,SAAC/B,GACb,IAAIgC,EAAiBhC,EAAMiC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAMS,GAAIgB,EAAEhB,QAExEiB,EAAkBpC,EAAMqC,SACvBH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASd,QAASc,EAAEd,QAASL,GAAImB,EAAEnB,QAMjD,OACI,yBAAKjB,UAAWkB,IAAEa,SACd,yBAAK/B,UAAWkB,IAAEmB,cACbP,GAEL,yBAAK9B,UAAWkB,IAAEiB,UACbD,EACD,kBAACI,EAAD,CAAgBZ,SAXN,SAACa,GACnBzC,EAAM0C,eAAeD,EAAOE,sB,wDCThCC,EAAkB,SAACC,GACnB,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,QCeZE,uBDXiB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKnD,MAAM8C,OAET,kBAACG,EAAcE,KAAKnD,OAFK,kBAAC,IAAD,CAAUsB,GAAG,eAHV,GACX8B,IAAMH,WAStC,OAFqCI,YAAQT,EAARS,CAAyBH,KCK9DG,aAfkB,SAACR,GACnB,MAAO,CACHZ,QAASY,EAAMS,aAAarB,QAC5BI,SAAUQ,EAAMS,aAAajB,aAIZ,SAACkB,GACtB,MAAO,CACHb,eAAgB,SAACc,GAAD,OAAgBD,EAASE,YAAwBD,SAI1DR,CAGbjB","file":"static/js/6.f8d1ca20.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return <span>{\"Required!\"}</span>;\r\n};\r\n\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return <span>{`Max length is ${maxLength} symbols`}</span>;;\r\n\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport styles from \"./FormControls.module.sass\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst Element = Element => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = Element(\"textarea\");\r\nexport const Input = Element(\"input\");\r\n\r\n\r\nexport const createField = (placeholder, type, name, component, validator, props = {}, text = '') => (\r\n    <div>\r\n        <label>\r\n            <Field placeholder={placeholder} type={type} name={name} component={component}\r\n                   validate={validator}\r\n                {...props}/>\r\n        </label>{text}\r\n    </div>\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2GFZb\",\"error\":\"FormControls_error__2yEwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__UrR_X\",\"dialogsItems\":\"Dialogs_dialogsItems__2GSit\",\"dialog\":\"Dialogs_dialog__QT_GS\",\"messages\":\"Dialogs_messages__2yisJ\",\"message\":\"Dialogs_message__f1z3W\",\"form\":\"Dialogs_form__UhE31\"};","import React from 'react';\r\nimport s from './../Dialogs.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.sass';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.sass';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../Controls/Validators/Validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(props => {\r\n    return (\r\n        <form className={s.form} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label>\r\n                    <Field component={Textarea} name={\"newMessageText\"} placeholder={\"Type message...\"}\r\n                           validate={[required, maxLength30]}/>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n});","import React from 'react';\r\nimport s from './Dialogs.module.sass';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n\r\n    let messageElements = props.messages\r\n        .map(m => <Message message={m.message} id={m.id}/>);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.onMessageClick(values.newMessageText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return (<Redirect to='/login'/>)\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","import React from 'react';\r\nimport {AddMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onMessageClick: (newMessage) => dispatch(AddMessageActionCreator(newMessage))\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);"],"sourceRoot":""}