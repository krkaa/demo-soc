{"version":3,"sources":["common/FormControls/FormControls.js","common/FormControls/FormControls.module.sass","Controls/Validators/Validators.js","components/Login/Login.module.sass","components/Login/LoginReduxForm/LoginReduxForm.jsx","components/Login/Login.jsx"],"names":["Element","input","meta","touched","error","props","hasError","className","styles","formControl","Textarea","Input","createField","placeholder","type","name","component","validator","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","reduxForm","form","handleSubmit","captchaUrl","loginForm","onSubmit","captcha","src","alt","loginError","connect","state","isAuth","auth","login","to","loginPage","LoginReduxForm","formData","email","password","rememberMe"],"mappings":"gQAIMA,EAAU,SAAAA,GAAO,OAAI,YAAgD,IAA9CC,EAA6C,EAA7CA,MAA6C,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,gCAChEC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,KAClE,kBAAC,EAAD,iBAAaH,EAAWI,IACvBC,GAAY,kCAAQF,EAAR,QAKZM,EAAWV,EAAQ,YACnBW,EAAQX,EAAQ,SAGhBY,EAAc,SAACC,EAAaC,EAAMC,EAAMC,EAAWC,GAArC,IAAgDZ,EAAhD,uDAAwD,GAAIa,EAA5D,uDAAmE,GAAnE,OACvB,6BACI,+BACI,kBAAC,IAAD,eAAOL,YAAaA,EAAaC,KAAMA,EAAMC,KAAMA,EAAMC,UAAWA,EAC7DG,SAAUF,GACTZ,KACHa,K,oBCvBjBE,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,8B,iCCD1E,wFAEaC,EAAW,SAAAC,GACpB,IAAIA,EAEJ,OAAO,8BAAO,cAILC,EAAmB,SAAAC,GAAS,OAAI,SAAAF,GACzC,GAAIA,EAAMG,OAASD,EAAW,OAAO,sDAAwBA,EAAxB,gB,oBCTzCL,EAAOC,QAAU,CAAC,UAAY,yBAAyB,WAAa,0BAA0B,QAAU,yB,yGCKzFM,cAAU,CAACC,KAAM,SAAjBD,EAA2B,YAAwC,IAAtCE,EAAqC,EAArCA,aAAczB,EAAuB,EAAvBA,MAAO0B,EAAgB,EAAhBA,WAC7D,OACI,0BAAMvB,UAAWC,IAAOuB,UAAWC,SAAUH,GACxCjB,YAAY,WAAY,QAAS,QAASD,IAAO,CAACW,MAClDV,YAAY,cAAe,WAAY,WAAYD,IAAO,CAACW,MAC3DV,YAAY,KAAM,WAAY,aAAcD,IAAO,KAAM,KAAM,aAC/DmB,GAAc,yBAAKvB,UAAWC,IAAOyB,SAClC,yBAAKC,IAAKJ,EAAYK,IAAI,aAE7BL,GAAclB,YAAY,eAAgB,UAAW,UAAWD,IAAO,CAACW,MACxElB,GAAS,yBAAKG,UAAWC,IAAO4B,YAC5BhC,GAGL,6BACI,8C,wBCODiC,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBT,WAAYQ,EAAME,KAAKV,cAGa,CAACW,WAA1BJ,EArBD,SAAChC,GAMX,OAAIA,EAAMkC,OACC,kBAAC,IAAD,CAAUG,GAAI,aAGlB,6BACH,yBAAKnC,UAAWC,IAAOmC,WAAvB,SACA,kBAACC,EAAD,CAAgBZ,SAVH,SAACa,GACdxC,EAAMoC,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASZ,UASzCH,WAAYzB,EAAMyB","file":"static/js/7.96ed8f93.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormControls.module.sass\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst Element = Element => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = Element(\"textarea\");\r\nexport const Input = Element(\"input\");\r\n\r\n\r\nexport const createField = (placeholder, type, name, component, validator, props = {}, text = '') => (\r\n    <div>\r\n        <label>\r\n            <Field placeholder={placeholder} type={type} name={name} component={component}\r\n                   validate={validator}\r\n                {...props}/>\r\n        </label>{text}\r\n    </div>\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2GFZb\",\"error\":\"FormControls_error__2yEwC\"};","import React from \"react\";\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return <span>{\"Required!\"}</span>;\r\n};\r\n\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return <span>{`Max length is ${maxLength} symbols`}</span>;;\r\n\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__1jOy1\",\"loginError\":\"Login_loginError__3oNvV\",\"captcha\":\"Login_captcha__3rx76\"};","import React from 'react';\r\nimport styles from './../Login.module.sass';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"./../../../common/FormControls/FormControls\";\r\nimport {required} from \"../../../Controls/Validators/Validators\";\r\n\r\nexport default reduxForm({form: 'login'})(({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form className={styles.loginForm} onSubmit={handleSubmit}>\r\n            {createField(\"Email...\", \"email\", \"email\", Input, [required])}\r\n            {createField(\"Password...\", \"password\", \"password\", Input, [required])}\r\n            {createField(null, \"checkbox\", \"rememberMe\", Input, null, null, \"rember me\")}\r\n            {captchaUrl && <div className={styles.captcha}>\r\n                <img src={captchaUrl} alt=\"captcha\"/>\r\n            </div>}\r\n            {captchaUrl && createField(\"Type symbols\", \"captcha\", \"captcha\", Input, [required])}\r\n            {error && <div className={styles.loginError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n});","import React from 'react';\r\nimport styles from './Login.module.sass';\r\nimport LoginReduxForm from \"./LoginReduxForm/LoginReduxForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <div className={styles.loginPage}>Login</div>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}